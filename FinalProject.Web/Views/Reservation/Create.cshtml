@model FinalProject.Web.Models.ViewModels.Reservation.Create.CreateReservationViewModel
@{
    ViewData["Title"] = "Create Reservation";
    var today = DateTime.Today;
    var maxDate = today.AddDays(14);
}

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="text-gradient mb-0">
            <i class="fas fa-calendar-plus me-2"></i>Create Reservation
        </h1>
        <a asp-controller="Reservation" asp-action="Index" class="btn btn-outline-primary">
            <i class="fas fa-arrow-left me-2"></i>Back to Reservations
        </a>
    </div>

    <form asp-controller="Reservation" asp-action="Create" method="post" id="reservationForm">
        <input type="hidden" asp-for="WorkspaceId" value="@Model.WorkspaceId" id="selectedWorkspaceId" />
        <input type="hidden" asp-for="ReservationDate" value="@Model.ReservationDate" id="selectedDate" />

        <div class="row">
            <!-- Workspace Selection -->
            <div class="col-lg-8 mb-4">
                <div class="card shadow-soft">
                    <div class="card-header text-white">
                        <h5 class="mb-0">
                            <i class="fas fa-desk me-2"></i>Select Workspace
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            @foreach (var workspace in Model.Workspaces)
                            {
                                var isFavorite = Model.FavoriteWorkspaces.Any(f => f.WorkspaceId == workspace.Id);
                                <div class="col-md-6 mb-4">
                                    <div class="card shadow-hover h-100 workspace-card" data-workspace-id="@workspace.Id"
                                        data-reserved-dates='@Json.Serialize(workspace.ReservedDates)'>
                                        <div class="card-header text-white">
                                            <div class="d-flex justify-content-between align-items-center">
                                                <h5 class="mb-0">
                                                    <i class="fas fa-desk me-2"></i>@workspace.Name
                                                    @if (isFavorite)
                                                    {
                                                        <i class="fas fa-star text-warning ms-2" title="Favorite Workspace"></i>
                                                    }
                                                </h5>
                                                <span class="badge bg-info">
                                                    <i class="fas fa-map-marker-alt me-1"></i>Floor @workspace.Floor
                                                </span>
                                            </div>
                                        </div>
                                        <div class="card-body">
                                            <div class="mb-3">
                                                <h6 class="text-muted mb-2">
                                                    <i class="fas fa-map-marker-alt me-2"></i>Location
                                                </h6>
                                                <p class="mb-0">@workspace.Zone</p>
                                            </div>
                                            <div class="mb-3">
                                                <h6 class="text-muted mb-2">
                                                    <i class="fas fa-info-circle me-2"></i>Amenities
                                                </h6>
                                                <div class="d-flex flex-wrap gap-2">
                                                    @if (workspace.HasMonitor)
                                                    {
                                                        <span class="badge bg-info">
                                                            <i class="fas fa-desktop me-1"></i>Monitor
                                                        </span>
                                                    }
                                                    @if (workspace.HasDockingStation)
                                                    {
                                                        <span class="badge bg-info">
                                                            <i class="fas fa-plug me-1"></i>Docking
                                                        </span>
                                                    }
                                                    @if (workspace.IsNearWindow)
                                                    {
                                                        <span class="badge bg-info">
                                                            <i class="fas fa-window-maximize me-1"></i>Window
                                                        </span>
                                                    }
                                                    @if (workspace.IsNearPrinter)
                                                    {
                                                        <span class="badge bg-info">
                                                            <i class="fas fa-print me-1"></i>Printer
                                                        </span>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                        <div class="card-footer bg-transparent border-top-0 selected-indicator d-none">
                                            <div class="d-flex align-items-center justify-content-center text-primary">
                                                <i class="fas fa-check-circle me-2"></i>
                                                <span>Selected Workspace</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Date Selection -->
            <div class="col-lg-4">
                <div class="card shadow-soft">
                    <div class="card-header text-white">
                        <h5 class="mb-0">
                            <i class="fas fa-calendar me-2"></i>Select Date
                        </h5>
                    </div>
                    <div class="card-body">
                        <div id="datepicker" class="datepicker-container"></div>
                        <div class="mt-4">
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <small class="text-muted">Selected Date:</small>
                                <span id="selectedDateDisplay" class="fw-bold">No date selected</span>
                            </div>
                            <div class="d-flex justify-content-between align-items-center">
                                <small class="text-muted">Selected Workspace:</small>
                                <span id="selectedWorkspaceDisplay" class="fw-bold">No workspace selected</span>
                            </div>
                        </div>
                    </div>

                    <div class="text-danger card-body">
                        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                        {
                            <div class="alert alert-danger py-2 mb-2 d-flex align-items-center" role="alert">
                                <i class="fas fa-exclamation-circle me-2"></i>
                                <span>@error.ErrorMessage</span>
                            </div>
                        }
                    </div>

                    <div class="card-footer bg-transparent border-top-0">
                        <button type="submit" class="btn btn-primary w-100" id="submitButton" disabled>
                            <i class="fas fa-check me-2"></i>Create Reservation
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script>
        $(document).ready(function () {
            let selectedWorkspaceId = null;
            let selectedDate = null;
            let reservedDates = [];

            // Initialize datepicker
            const fp = flatpickr("#datepicker", {
                inline: true,
                minDate: "today",
                maxDate: "@maxDate.ToString("yyyy-MM-dd")",
                disable: [],
                onChange: function (selectedDates, dateStr) {
                    selectedDate = selectedDates[0];
                    $("#selectedDate").val(dateStr);
                    $("#selectedDateDisplay").text(selectedDate.toLocaleDateString());
                    updateSubmitButton();
                }
            });

            // Handle workspace selection
            $(".workspace-card").click(function () {
                $(".workspace-card").removeClass("border-primary");
                $(".selected-indicator").addClass("d-none");
                $(this).addClass("border-primary");
                $(this).find(".selected-indicator").removeClass("d-none");

                selectedWorkspaceId = $(this).data("workspace-id");
                $("#selectedWorkspaceId").val(selectedWorkspaceId);
                $("#selectedWorkspaceDisplay").text($(this).find("h5").text().trim());

                // Update datepicker with reserved dates
                reservedDates = $(this).data("reserved-dates");
                fp.set("disable", reservedDates);

                updateSubmitButton();
            });

            // Set initial values if they exist in the model
            if (@Model.WorkspaceId > 0) {
                const workspaceCard = $(`.workspace-card[data-workspace-id="@Model.WorkspaceId"]`);
                if (workspaceCard.length) {
                    workspaceCard.click();
                }
            }

            if (@(Model.ReservationDate != default(DateTime) ? "true" : "false")) {
                const date = new Date('@Model.ReservationDate.ToString("yyyy-MM-dd")');
                fp.setDate(date);
                $("#selectedDate").val('@Model.ReservationDate.ToString("yyyy-MM-dd")');
                $("#selectedDateDisplay").text(date.toLocaleDateString());
                selectedDate = date;
            }

            function updateSubmitButton() {
                const button = $("#submitButton");
                if (selectedWorkspaceId && selectedDate) {
                    button.prop("disabled", false);
                } else {
                    button.prop("disabled", true);
                }
            }

            // Initial button state
            updateSubmitButton();
        });
    </script>

    <style>
        .workspace-card {
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .workspace-card:hover {
            transform: translateY(-5px);
        }

        .workspace-card.border-primary {
            border-width: 2px !important;
        }

        .selected-indicator {
            background-color: rgba(13, 110, 253, 0.1);
            border-top: 1px solid rgba(13, 110, 253, 0.2) !important;
        }

        .datepicker-container {
            width: 100%;
        }

        .flatpickr-calendar {
            width: 100% !important;
        }

        .flatpickr-day.disabled {
            background-color: #f8f9fa;
            color: #6c757d;
            text-decoration: line-through;
        }
    </style>
}